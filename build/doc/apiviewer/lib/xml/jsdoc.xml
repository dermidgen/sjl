<?xml version="1.0"?>
<javascript>
    <classes>
    
        <class name="com.sjl.io.data.Json">
            <constructor_args>(smd)</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Json.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Scott Thundercloud</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>JSON Class
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Attaches the methods from com.sjl.io.RPC to this</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="createMethods">
                        <description/>
                        <argument_list>(newFuncs)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Json.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="runMethod">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Json.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="rpc">
                    <field-value><p>new com.sjl.io.Http.RPC(smd)</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.application.Navigator">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Navigator.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Singleton class to get various information about current navigation
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Creates instance of Navigator</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="onLocationChange">
                        <description/>
                        <argument_list>(evt)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Navigator.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="onHistoryEvent">
                        <description/>
                        <argument_list>(evt)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Navigator.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="e">
                    <field-value><p>{}</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                
                    <method mapped_name="GetInstance">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Navigator.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>com.sjl.application.Navigator</p></value>
                            
                            </var>
                            
                        </vars>
                </method>

                


            </class-methods>

            <class-fields>
                

                    <field name="__instance">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="type">
                            
                                <value><p>com.sjl.application.Navigator</p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="Boolean">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="toJSONString">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>json.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.XMLHttpRequest.__construct">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.RPC">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>RPC.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham  </p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Provides a mechanism to make calls against the mislabeled REST API
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Creates a new instance of RPC</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="CreateAuthRequest">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>RPC.js</p></value>
                            
                            </var>
                            
                            <var name="private">
                            
                                <value><p>1</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="ParseParameterExpression">
                        <description/>
                        <argument_list>(oParameters)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>RPC.js</p></value>
                            
                            </var>
                            
                            <var name="private">
                            
                                <value><p>1</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Call">
                        <description/>
                        <argument_list>(strMethodName,oParameters,strMethod)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>RPC.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="AuthToken">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="AuthUserID">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.EventDispatcher">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>EventDispatcher.js</p></value>
                
                </var>
            
                <var name="type">
                
                    <value><p>void</p></value>
                
                </var>
            
                <var name="author">
                
                    <value><p>Scott Thundercloud    </p></value>
                
                </var>
            
                <var name="static">
                
                    <value/>
                
                </var>
            
                <var name="class">
                
                    <value><p>com.sjl.EventDispatcher
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Interface for objects wishing to publish events</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="__event">
                        <description/>
                        <argument_list>(Type)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="__dispatchQueue">
                        <description/>
                        <argument_list>(data)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="__removeListener">
                        <description/>
                        <argument_list>(type, listener)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="__addEventType">
                        <description/>
                        <argument_list>(type)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="__checkListener">
                        <description/>
                        <argument_list>(event, obj)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="dispatch">
                        <description/>
                        <argument_list>(data)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="addListener">
                        <description/>
                        <argument_list>(event,obj)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="removeListener">
                        <description/>
                        <argument_list>(type, listener)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>EventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.data">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
                <class name="com.sjl.io.data.JSON"/>
            
                <class name="com.sjl.io.data.XML"/>
            
                <class name="com.sjl.io.data.Json"/>
            
        </inner-classes>

            
        </class>
    
        <class name="Function">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="bind">
                        <description><p>Allows a class to inherit the methods of an external class without actually extending it
 Provides an interface/implements of sorts

 Methods may still be overloaded but are defined in extern
 Only static methods/properties will be inherited</p></description>
                        <argument_list>(object)</argument_list>
                        <vars>
                            
                            <var name="addon">
                            
                                <value/>
                            
                            </var>
                            
                            <var name="filename">
                            
                                <value><p>Util.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="forEach">
                        <description/>
                        <argument_list>(object, block, context)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Util.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.data.JSON">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>JSON.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham  </p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Provides JSON serialization/deserialization for XHR transports
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Create an instance of the JSON parser for XHR communication</p></constructor_detail>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.XMLHttpRequest.prototype.__construct">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
                    <field name="e">
                    <field-value><p>com.sjl.application.Environment.GetInstance()</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
                <class name="com.sjl.io.Http"/>
            
                <class name="com.sjl.io.RPC"/>
            
                <class name="com.sjl.io.ResourceLoader"/>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.DOMEventDispatcher">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="Initialize">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMEventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="findElement">
                        <description/>
                        <argument_list>(element)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMEventDispatcher.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="addDOMListener">
                        <description/>
                        <argument_list>(element, type, listener, useCapture)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMEventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="removeDOMListener">
                        <description/>
                        <argument_list>(element, type, listener, useCapture)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMEventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="dispatchDOMEvent">
                        <description/>
                        <argument_list>(element, event)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMEventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Destroy">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMEventDispatcher.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="DOMEvents">
                    <field-value><p>[]</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="Number">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="toJSONString">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>json.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.DOMParser">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>DOMParser.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Parses DOM for elements matching classes

 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Enables DOM parsing for divs with the parseAs attribute</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="parseDOM">
                        <description/>
                        <argument_list>(oRoot)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMParser.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="createClass">
                        <description/>
                        <argument_list>(strClass, oEm)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>DOMParser.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.theme.Selector">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Selector.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="requires">
                
                    <value><p>com.sjl.theme.Theme  </p></value>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham  </p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Manages themes
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Singleton class - use GetInstance()</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="SetTheme">
                        <description><p>Creates a new theme instance and sets it as active</p></description>
                        <argument_list>(theme)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Selector.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                            <var name="param">
                            
                                <value><p>{string} theme	Name of the theme to be loaded  </p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="LoadTheme">
                        <description><p>Tell the theme to actually load its resources</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Selector.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="Theme">
                    <field-value><p>null</p></field-value>
                        <field-description><p>The current theme</p></field-description>
                            <vars>
                                
                                    <var name="type">
                            
                                <value><p>com.sjl.theme.Theme</p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                
                    <method mapped_name="GetInstance">
                        <description><p>Static method for getting an instance of the class</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Selector.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>com.sjl.theme.Selector</p></value>
                            
                            </var>
                            
                        </vars>
                </method>

                


            </class-methods>

            <class-fields>
                

                    <field name="__instance">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Static internal reference for singleton</p></field-description>
                            <vars>
                                
                                    <var name="type">
                            
                                <value><p>com.sjl.theme.Selector</p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.theme">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
                <class name="com.sjl.theme.Selector"/>
            
                <class name="com.sjl.theme.Theme"/>
            
        </inner-classes>

            
        </class>
    
        <class name="Object">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="hasProperty">
                        <description/>
                        <argument_list>(searchElement)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Util.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="toJSONString">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>json.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="Array">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="indexOf">
                        <description/>
                        <argument_list>(searchElement,fromIndex)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Util.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="remove">
                        <description/>
                        <argument_list>(from, to)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Util.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="toJSONString">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>json.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.theme.Theme">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Theme.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham  </p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Theme manages all the aspects of a theme's details.  It also loads all necessary CSS
 for the theme and manages the location and path to theme relative resources
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Creates an instance of Theme</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="__registerThemeDefs">
                        <description/>
                        <argument_list>(event)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Theme.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="LoadStyles">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Theme.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="LoadThemeDefs">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Theme.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Load">
                        <description><p>Loads the theme's CSS and Definition</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Theme.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="GetProperty">
                        <description/>
                        <argument_list>(propertyName)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Theme.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="Name">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Theme name</p></field-description>
                            <vars>
                                
                                    <var name="type">
                            
                                <value><p>string</p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="RoundedCorners">
                    <field-value><p>false</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="RoundingRadius">
                    <field-value><p>0</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="Shadows">
                    <field-value><p>false</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="ShadowStrength">
                    <field-value><p>0</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="ShadowOffset">
                    <field-value><p>0</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.application.Core">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Core.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Core provides applications with a base level of functionality
 to extend upon.

 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Base Class - Do not instantiate</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="IncludeThemeResources">
                        <description/>
                        <argument_list>(theme)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Core.js</p></value>
                            
                            </var>
                            
                            <var name="private">
                            
                                <value><p>1</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="EnableTheme">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Core.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="SetTheme">
                        <description><p>Set and immediately enable a specified theme</p></description>
                        <argument_list>(theme)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Core.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                            <var name="param">
                            
                                <value><p>{String} theme	The theme to be set and enabeled  </p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="Theme">
                    <field-value><p>'default'</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="Date">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="toJSONString">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>json.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

                    <field name="TearDown">
                    <field-value><p>{</p></field-value>
                        <field-description><p>Implements garbage collection</p></field-description>
                            <vars>
                                
                                    <var name="author">
                            
                                <value><p>Danny Graham</p></value>
                            
                                    </var>
                                
                                    <var name="static">
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="class">
                            
                                <value><p>Runs the global garbage collector
 </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                

            </class-fields>

            <inner-classes>
            
                <class name="com.sjl.DOMParser"/>
            
                <class name="com.sjl.EventDispatcher"/>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.data.XML">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>XML.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham  </p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Provides the XML parser for XHR transports
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Creates an instance of the XML parser for XHR communication</p></constructor_detail>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.ResourceLoader">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>ResourceLoader.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>This class manages the loading of dependencies and resources.
 It also creates a wrapper replacement for Ajile's Import and Load methods
 and makes available the queue of resources currently being loaded.

 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Implements dependency and resource loading</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="_onLoad">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>ResourceLoader.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="SetPath">
                        <description/>
                        <argument_list>(p)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>ResourceLoader.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="IsLoaded">
                        <description/>
                        <argument_list>(p)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>ResourceLoader.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="IsQueued">
                        <description/>
                        <argument_list>(p)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>ResourceLoader.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Import">
                        <description/>
                        <argument_list>(p)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>ResourceLoader.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="BasePath">
                    <field-value><p>'lib/js'</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="Queue">
                    <field-value><p>[]</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="Loaded">
                    <field-value><p>['com.sjl.EventDispatcher',</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="lObj">
                    <field-value><p>this._onLoad.bind(this)</p></field-value>
                        <field-description/>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="_import">
                    <field-value><p>ImportAs</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                
                    <method mapped_name="GetInstance">
                        <description/>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>ResourceLoader.js</p></value>
                            
                            </var>
                            
                        </vars>
                </method>

                


            </class-methods>

            <class-fields>
                

                    <field name="__instance">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.XMLHttpRequest">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
                    <method mapped_name="__construct">
                        <description><p>Creates and instance of XMLHttpRequest</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>XMLHttpRequest.js</p></value>
                            
                            </var>
                            
                            <var name="constructor">
                            
                                <value/>
                            
                            </var>
                            
                            <var name="author">
                            
                                <value><p>Danny Graham</p></value>
                            
                            </var>
                            
                            <var name="class">
                            
                                <value><p>Provides abstraction to browser XHR
 </p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="Element">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
                    <field name="addDOMListener">
                    <field-value><p>/** @type void */</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="removeDOMListener">
                    <field-value><p>/** @type void */</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.application.Environment">
            <constructor_args>()</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Environment.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="author">
                
                    <value><p>Danny Graham</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Singleton class to get various information about the environment
 </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Creates instance of Environment</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="GetOS">
                        <description><p>Gets the client OS</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Environment.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>{string}</p></value>
                            
                            </var>
                            
                            <var name="return">
                            
                                <value><p>The client Operating System  </p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="GetBrowser">
                        <description><p>Gets complete browser details</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Environment.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>{array}</p></value>
                            
                            </var>
                            
                            <var name="return">
                            
                                <value><p>Array of browser details  </p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="HasFeature">
                        <description/>
                        <argument_list>(feature)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Environment.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="UserAgent">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="AppVersion">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="Browser">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
                    <field name="OS">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                
                    <method mapped_name="GetInstance">
                        <description><p>Returns an instance of Environment</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Environment.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>com.sjl.application.Environment</p></value>
                            
                            </var>
                            
                        </vars>
                </method>

                


            </class-methods>

            <class-fields>
                

                    <field name="__instance">
                    <field-value><p>null</p></field-value>
                        <field-description/>
                            <vars>
                                
                        </vars>
                    </field>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.io.Http">
            <constructor_args>(obj)</constructor_args>
            <constructor_vars>
            
                <var name="filename">
                
                    <value><p>Http.js</p></value>
                
                </var>
            
                <var name="constructor">
                
                    <value/>
                
                </var>
            
                <var name="requires">
                
                    <value><p>com.sjl.EventDispatcher Implements EventDispatcher 'interface'  </p></value>
                
                </var>
            
                <var name="author">
                
                    <value><p>Scott Thundercloud</p></value>
                
                </var>
            
                <var name="class">
                
                    <value><p>Handles XHR requests and provides abstration and compatability to browsers that
 don't natively implement XMLHttpRequest

 </p></value>
                
                </var>
            
                <var name="see">
                
                    <value><p>com.sjl.EventDispatcher  </p></value>
                
                </var>
            
            </constructor_vars>

            <constructor_detail><p>Creates an instance of com.sjl.io.Http</p></constructor_detail>

            <instance-methods>
                
                    <method mapped_name="_onreadystatechange">
                        <description><p>Callback handler for the requests's onreadystatechange</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Http.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Open">
                        <description><p>Opens the request and sets up the onreadystatechange callback for IE</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Http.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Send">
                        <description><p>Sends the request to the server</p></description>
                        <argument_list>()</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Http.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
                    <method mapped_name="Request">
                        <description><p>Method for calling a request subsequent to an earlier request, or for defferred requests</p></description>
                        <argument_list>(obj)</argument_list>
                        <vars>
                            
                            <var name="filename">
                            
                                <value><p>Http.js</p></value>
                            
                            </var>
                            
                            <var name="type">
                            
                                <value><p>Void</p></value>
                            
                            </var>
                            
                        </vars>
                </method>
               
            </instance-methods>

            <instance-fields>
                
                    <field name="xhr">
                    <field-value><p>new com.sjl.io.XMLHttpRequest()</p></field-value>
                        <field-description><p>Cross browser XHR Object</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>XMLHttpRequest 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="method">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Method for the request GET|POST|HEAD|PUT|DELETE|OPTIONS</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{string} 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="url">
                    <field-value><p>null</p></field-value>
                        <field-description><p>URI for the request</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{string} 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="async">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Indicates whether or not the request should be made asyncronously. Defaults to true.</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{boolean}  </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="username">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional username for the request</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{string} 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="password">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional password for the request</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{string} 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="headers">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional array of headers to set on the request object</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{array} 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="payload">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional data to be sent with the request (most commonly for POST)</p></field-description>
                            <vars>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{mixed} 	   </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="callback">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional compatability option for sending a direct callback signature</p></field-description>
                            <vars>
                                
                                    <var name="deprecated">
                            
                                <value><p>Use addListener() on an instance of Http instead 	   </p></value>
                            
                                    </var>
                                
                                    <var name="private">
                            
                                <value/>
                            
                                <value/>
                            
                                    </var>
                                
                                    <var name="type">
                            
                                <value><p>{function}  </p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="contentType">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional identifier for the content type.  This can help with determining expected response type.</p></field-description>
                            <vars>
                                
                                    <var name="type">
                            
                                <value><p>{string}</p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
                    <field name="mimeType">
                    <field-value><p>null</p></field-value>
                        <field-description><p>Optional identifier for the mime type.  This can help with determining expected response data.</p></field-description>
                            <vars>
                                
                                    <var name="type">
                            
                                <value><p>{string}</p></value>
                            
                                    </var>
                                
                        </vars>
                    </field>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
        </inner-classes>

            
        </class>
    
        <class name="com.sjl.application">
            <constructor_args/>
            <constructor_vars>
            
            </constructor_vars>

            <constructor_detail/>

            <instance-methods>
                
            </instance-methods>

            <instance-fields>
                
            </instance-fields>

            <class-methods>
                


            </class-methods>

            <class-fields>
                

            </class-fields>

            <inner-classes>
            
                <class name="com.sjl.application.Core"/>
            
                <class name="com.sjl.application.Environment"/>
            
                <class name="com.sjl.application.Navigator"/>
            
        </inner-classes>

            
        </class>
    
    </classes>
</javascript>
